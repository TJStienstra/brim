name: Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:

  #---------------------------------- download-data -----------------------------------#

  download-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download parametrization data
        run: |
          git clone --depth 1 https://github.com/moorepants/BicycleParameters.git
          mv BicycleParameters/data data
          rm -rf BicycleParameters
      - name: Upload data directory
        uses: actions/upload-artifact@v4
        with:
          name: data
          path: data

  #----------------------------------- code-quality -----------------------------------#

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: poetry install --with lint
      - name: Run lint
        run: |
          poetry run ruff check .

  #-------------------------------------- tests ---------------------------------------#

  tests:
    needs: code-quality

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Download data directory
        uses: actions/download-artifact@v4
        with:
          name: data
          path: data
      - name: Install dependencies
        run: poetry install --with test --all-extras
      - name: Run tests
        run: poetry run pytest

  #------------------------------------ doc-tests -------------------------------------#

  test_docs_job:
    needs: code-quality

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install pandoc
      - name: Create the tutorials' environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: docs/tutorials/tutorials_environment.yml
          init-shell: >-
            bash
            powershell
          cache-environment: true
          post-cleanup: 'all'
      - name: Deactivate the tutorials environment
        run: |
          source /usr/share/miniconda/etc/profile.d/conda.sh
          conda deactivate
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: poetry install --with docs --all-extras
      - name: make the sphinx docs
        run: |
          poetry run make -C docs clean
          poetry run make -C docs html

  #--------------------------------- test benchmarks ----------------------------------#

  test_benchmarks:
    needs: tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: poetry install --with test
      - name: Run benchmarks
        run: |
          poetry run pytest ./benchmarks/

    #--------------------------------- code-coverage ----------------------------------#

  code-coverage:
    needs: tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==1.8.3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Download data directory
        uses: actions/download-artifact@v4
        with:
          name: data
          path: data
      - name: Install dependencies
        run: poetry install --with test --all-extras
      - name: Run tests with code coverage
        run: |
          poetry run pytest --cov
